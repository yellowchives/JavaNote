# 不需要任何用户启动工作进程
#user  nobody;
worker_processes  2;

# 错误日志的位置 默认级别是error
error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    # 每个worker处理1024个连接
    worker_connections  1024;

    use epoll;
}


http {
    # 引入外部文件
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    # 允许客户端发送文件
    sendfile        on;
    # 将文件收集起来一起发送
    #tcp_nopush     on;
    # 处理完成请求后继续保持连接的时长
    #keepalive_timeout  0;
    keepalive_timeout  65;

    # 开启gzip压缩
    gzip  on;
    # 小于10字节的文件不会压缩
    gzip_min_length 10
    # 设置压缩级别
    gzip_comp_level 3
    # 需要压缩的类型
    gzip_types text/plain application/javascript text/css text/javascript application/json
	
    #可以将server写到外部配置文件中，然后这样引入
    include imooc.conf;	

    server {

        listen        8080;
	    server_name   114.116.8.203;

        # ip:port/ 会被指向 /home/foodie-shop/index.html
        location / {
            root /home/foodie-shop;
            index index.html;
        }

        # ip:port/imooc/? 会被指向 /home/imooc/?
        # 服务器的资源地址 = root 拼接 location
        location /imooc {
            root /home;
        }

        # 使用 alias 替代root，这种情况不会拼接，而是直接替换
        # 可以替代上面的方式
        location /static {
            alias /home/imooc;
        }

        #允许跨域请求
        add_header 'Access-Control-Allow-Origin' *;
        #允许带上cookie的请求
        add_header 'Access-Control-Allow-Credentials' 'true';
        #允许请求的方法
        add_header 'Access-Control-Allow-Methods' *;
        #允许请求的header
        add_header 'Access-Control-Allow-Headers' *;

        #对源站点进行验证
        valid_referers *.imooc.com;
        #非法引入会进行判断
        if ($invalid_referer) {
            return 404;
        }
    }


    server {
        listen       80;
        server_name  localhost 114.116.8.203;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    #配置上游服务器，给集群起个名字
    #默认负载均衡策略是轮询
    #下面使用了权重策略
    upstream tomcats {
        server 192.168.1.173:8080 weight=1;
        server 192.168.1.174:8080 weight=1;
        server 192.168.1.175:8080 weight=5;
    }
    #符合下面条件的转发给集群处理
    server {
        listen         80;
        server_name    www.tomcats.com;

        localhost / {
            proxy_pass http://tomcats;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
